spring.application.name=app
# Server configuration
server.port=10002

# Spring datasource configuration. JDBC spy datasource
# log4jdbc의 로깅 출력을 어떤 방식으로 처리할지 설정. log4jdbc가 SLF4J를 통해 로깅하도록 지정
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
# Spring Boot에서 **HikariCP (Hikari Connection Pool)**가 사용할 JDBC 드라이버 클래스를 지정
# net.sf.log4jdbc.sql.jdbcapi.DriverSpy는 log4jdbc에서 제공하는 스파이 드라이버(Wrapper Driver)
spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# log.info에서 테이블이 보이도록 추가한 부분
# HikariCP( JDBC Connection Pool을 제공하는 고성능 라이브러리) 데이터소스를 사용하여 Oracle 데이터베이스에 연결하기 위한 설정
# spring.datasource.hikari.jdbc-url :: Spring Boot에서 HikariCP(고성능 커넥션 풀 라이브러리)를 사용해 데이터베이스 연결을 설정할 때 사용하는 JDBC URL
# Java Database Connectivity (JDBC) 
# log4jdbc는 데이터베이스와의 모든 SQL 쿼리를 로깅하기 위한 프록시 드라이버.  Oracle의 thin 드라이버를 사용
# localhost는 현재 컴퓨터. Oracle 데이터베이스의 기본 포트는 1521. XE: Oracle Database Express Edition(XE)의 SID(시스템 식별자)
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.hikari.username=hr
spring.datasource.hikari.password=1234

# log.info에서 테이블 값외의 내용이 보이도록 추가
logging.level.root=INFO
logging.level.net.sf.log4jdbc=INFO
logging.level.com.example.app=INFO

#multipart  썸네일 처리시 임시공간 확보용
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=100MB
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=200MB

#upload/download 파일의 rootpath :: 컨트롤러나 서비스에서 @value로 설정하여 사용 
file.root.path=C:/KoreaIT/images/
